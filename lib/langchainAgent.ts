import { ChatOpenAI } from '@langchain/openai'
import { initializeAgentExecutorWithOptions } from 'langchain/agents'
import { logChatToSupabase } from './logChatToSupabase'

export async function runAgent(query: string): Promise<string> {
  try {
    const model = new ChatOpenAI({
      modelName: 'gpt-4o',
      temperature: 0.7,
      openAIApiKey: process.env.OPENAI_API_KEY,
    })

    const tools = [] // –ø–æ–∫–∞ –±–µ–∑ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤, –¥–æ–±–∞–≤–∏–º –ø–æ–∑–∂–µ

    const executor = await initializeAgentExecutorWithOptions(tools, model, {
      agentType: 'openai-functions',
      verbose: true,
    })

    const result = await executor.run(query)

    // üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ Supabase
    await logChatToSupabase(query, result)

    return result
  } catch (error: any) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ LangChain –∞–≥–µ–Ω—Ç–µ:', error)
    return '‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
  }
}
